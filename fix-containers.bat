@echo off
echo Fixing Docker setup issues...

echo 1. Stopping and removing existing containers...
docker-compose down

echo 2. Fixing database initialization script...
powershell -Command "Get-Content init-multiple-databases.sh | Set-Content -Encoding utf8 -NoNewline init-multiple-databases.sh"
echo Making init script executable in WSL...
wsl chmod +x init-multiple-databases.sh

echo 3. Updating configuration files...
echo Updating registry-appsettings.json to remove HTTPS URL...
powershell -Command "(Get-Content registry-appsettings.json) -replace 'http://\*:5261;https://\*:7185', 'http://*:5261' | Set-Content registry-appsettings.json"

echo Updating node1-appsettings.json to remove HTTPS URL...
powershell -Command "(Get-Content node1-appsettings.json) -replace 'http://\*:5186;https://\*:7109', 'http://*:5186' | Set-Content node1-appsettings.json"

echo Updating node2-appsettings.json to remove HTTPS URL...
powershell -Command "(Get-Content node2-appsettings.json) -replace 'http://\*:5186;https://\*:7109', 'http://*:5186' | Set-Content node2-appsettings.json"

echo Updating node3-appsettings.json to remove HTTPS URL...
powershell -Command "(Get-Content node3-appsettings.json) -replace 'http://\*:5186;https://\*:7109', 'http://*:5186' | Set-Content node3-appsettings.json"

echo 4. Creating FileTransferService implementation for registry service...
IF NOT EXIST "RegistryService\Services" mkdir "RegistryService\Services"
echo Creating placeholder service file...
copy FileTransferService.cs RegistryService\Services\FileTransferService.cs

echo 5. Removing existing images...
docker rmi drocsidhenrikdennis2025-api-node-1 drocsidhenrikdennis2025-api-node-2 drocsidhenrikdennis2025-api-node-3 drocsidhenrikdennis2025-registry-service

echo 6. Starting services...
docker-compose up -d

echo 7. Waiting for services to start...
timeout /t 15 /nobreak

echo 8. Checking service status...
docker-compose ps

echo Done! Services should now be running without HTTPS errors.
echo.
echo If you still encounter issues, check the logs with:
echo docker-compose logs